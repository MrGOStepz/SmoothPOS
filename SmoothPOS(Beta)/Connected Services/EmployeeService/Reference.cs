//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmoothPOS_Beta_.EmployeeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeService.IEmployeeService")]
    public interface IEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/AddNewEmployeeDetail", ReplyAction="http://tempuri.org/IEmployeeService/AddNewEmployeeDetailResponse")]
        int AddNewEmployeeDetail(string stringJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/AddNewEmployeeDetail", ReplyAction="http://tempuri.org/IEmployeeService/AddNewEmployeeDetailResponse")]
        System.Threading.Tasks.Task<int> AddNewEmployeeDetailAsync(string stringJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/UpdateEmployeeDetail", ReplyAction="http://tempuri.org/IEmployeeService/UpdateEmployeeDetailResponse")]
        int UpdateEmployeeDetail(string stringJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/UpdateEmployeeDetail", ReplyAction="http://tempuri.org/IEmployeeService/UpdateEmployeeDetailResponse")]
        System.Threading.Tasks.Task<int> UpdateEmployeeDetailAsync(string stringJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetListOfEmployee", ReplyAction="http://tempuri.org/IEmployeeService/GetListOfEmployeeResponse")]
        string GetListOfEmployee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetListOfEmployee", ReplyAction="http://tempuri.org/IEmployeeService/GetListOfEmployeeResponse")]
        System.Threading.Tasks.Task<string> GetListOfEmployeeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/LogIn", ReplyAction="http://tempuri.org/IEmployeeService/LogInResponse")]
        bool LogIn(string passwordJson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/LogIn", ReplyAction="http://tempuri.org/IEmployeeService/LogInResponse")]
        System.Threading.Tasks.Task<bool> LogInAsync(string passwordJson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmployeeDetailByPassword", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeeDetailByPasswordResponse")]
        string GetEmployeeDetailByPassword(string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmployeeDetailByPassword", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeeDetailByPasswordResponse")]
        System.Threading.Tasks.Task<string> GetEmployeeDetailByPasswordAsync(string Password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeServiceChannel : SmoothPOS_Beta_.EmployeeService.IEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeServiceClient : System.ServiceModel.ClientBase<SmoothPOS_Beta_.EmployeeService.IEmployeeService>, SmoothPOS_Beta_.EmployeeService.IEmployeeService {
        
        public EmployeeServiceClient() {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddNewEmployeeDetail(string stringJSON) {
            return base.Channel.AddNewEmployeeDetail(stringJSON);
        }
        
        public System.Threading.Tasks.Task<int> AddNewEmployeeDetailAsync(string stringJSON) {
            return base.Channel.AddNewEmployeeDetailAsync(stringJSON);
        }
        
        public int UpdateEmployeeDetail(string stringJSON) {
            return base.Channel.UpdateEmployeeDetail(stringJSON);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEmployeeDetailAsync(string stringJSON) {
            return base.Channel.UpdateEmployeeDetailAsync(stringJSON);
        }
        
        public string GetListOfEmployee() {
            return base.Channel.GetListOfEmployee();
        }
        
        public System.Threading.Tasks.Task<string> GetListOfEmployeeAsync() {
            return base.Channel.GetListOfEmployeeAsync();
        }
        
        public bool LogIn(string passwordJson) {
            return base.Channel.LogIn(passwordJson);
        }
        
        public System.Threading.Tasks.Task<bool> LogInAsync(string passwordJson) {
            return base.Channel.LogInAsync(passwordJson);
        }
        
        public string GetEmployeeDetailByPassword(string Password) {
            return base.Channel.GetEmployeeDetailByPassword(Password);
        }
        
        public System.Threading.Tasks.Task<string> GetEmployeeDetailByPasswordAsync(string Password) {
            return base.Channel.GetEmployeeDetailByPasswordAsync(Password);
        }
    }
}
