//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmoothPOS_Beta_.PopupService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PopupService.IPopupService")]
    public interface IPopupService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPopupService/AddPopup", ReplyAction="http://tempuri.org/IPopupService/AddPopupResponse")]
        int AddPopup(string stringJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPopupService/AddPopup", ReplyAction="http://tempuri.org/IPopupService/AddPopupResponse")]
        System.Threading.Tasks.Task<int> AddPopupAsync(string stringJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPopupService/UpdatePopup", ReplyAction="http://tempuri.org/IPopupService/UpdatePopupResponse")]
        int UpdatePopup(string stringJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPopupService/UpdatePopup", ReplyAction="http://tempuri.org/IPopupService/UpdatePopupResponse")]
        System.Threading.Tasks.Task<int> UpdatePopupAsync(string stringJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPopupService/RemovePopup", ReplyAction="http://tempuri.org/IPopupService/RemovePopupResponse")]
        int RemovePopup(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPopupService/RemovePopup", ReplyAction="http://tempuri.org/IPopupService/RemovePopupResponse")]
        System.Threading.Tasks.Task<int> RemovePopupAsync(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPopupService/ListOfPopup", ReplyAction="http://tempuri.org/IPopupService/ListOfPopupResponse")]
        string ListOfPopup();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPopupService/ListOfPopup", ReplyAction="http://tempuri.org/IPopupService/ListOfPopupResponse")]
        System.Threading.Tasks.Task<string> ListOfPopupAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPopupService/FilterOfPopup", ReplyAction="http://tempuri.org/IPopupService/FilterOfPopupResponse")]
        string FilterOfPopup(string popupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPopupService/FilterOfPopup", ReplyAction="http://tempuri.org/IPopupService/FilterOfPopupResponse")]
        System.Threading.Tasks.Task<string> FilterOfPopupAsync(string popupName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPopupServiceChannel : SmoothPOS_Beta_.PopupService.IPopupService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopupServiceClient : System.ServiceModel.ClientBase<SmoothPOS_Beta_.PopupService.IPopupService>, SmoothPOS_Beta_.PopupService.IPopupService {
        
        public PopupServiceClient() {
        }
        
        public PopupServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PopupServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PopupServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PopupServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddPopup(string stringJSON) {
            return base.Channel.AddPopup(stringJSON);
        }
        
        public System.Threading.Tasks.Task<int> AddPopupAsync(string stringJSON) {
            return base.Channel.AddPopupAsync(stringJSON);
        }
        
        public int UpdatePopup(string stringJSON) {
            return base.Channel.UpdatePopup(stringJSON);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePopupAsync(string stringJSON) {
            return base.Channel.UpdatePopupAsync(stringJSON);
        }
        
        public int RemovePopup(int productID) {
            return base.Channel.RemovePopup(productID);
        }
        
        public System.Threading.Tasks.Task<int> RemovePopupAsync(int productID) {
            return base.Channel.RemovePopupAsync(productID);
        }
        
        public string ListOfPopup() {
            return base.Channel.ListOfPopup();
        }
        
        public System.Threading.Tasks.Task<string> ListOfPopupAsync() {
            return base.Channel.ListOfPopupAsync();
        }
        
        public string FilterOfPopup(string popupName) {
            return base.Channel.FilterOfPopup(popupName);
        }
        
        public System.Threading.Tasks.Task<string> FilterOfPopupAsync(string popupName) {
            return base.Channel.FilterOfPopupAsync(popupName);
        }
    }
}
