//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmoothPOS_Beta_.ProductService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductService.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProduct", ReplyAction="http://tempuri.org/IProductService/AddProductResponse")]
        int AddProduct(string stringJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProduct", ReplyAction="http://tempuri.org/IProductService/AddProductResponse")]
        System.Threading.Tasks.Task<int> AddProductAsync(string stringJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProduct", ReplyAction="http://tempuri.org/IProductService/UpdateProductResponse")]
        int UpdateProduct(string stringJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProduct", ReplyAction="http://tempuri.org/IProductService/UpdateProductResponse")]
        System.Threading.Tasks.Task<int> UpdateProductAsync(string stringJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/RemoveProduct", ReplyAction="http://tempuri.org/IProductService/RemoveProductResponse")]
        int RemoveProduct(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/RemoveProduct", ReplyAction="http://tempuri.org/IProductService/RemoveProductResponse")]
        System.Threading.Tasks.Task<int> RemoveProductAsync(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/ListOfProduct", ReplyAction="http://tempuri.org/IProductService/ListOfProductResponse")]
        string ListOfProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/ListOfProduct", ReplyAction="http://tempuri.org/IProductService/ListOfProductResponse")]
        System.Threading.Tasks.Task<string> ListOfProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/FilterOfProduct", ReplyAction="http://tempuri.org/IProductService/FilterOfProductResponse")]
        string FilterOfProduct(string productName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/FilterOfProduct", ReplyAction="http://tempuri.org/IProductService/FilterOfProductResponse")]
        System.Threading.Tasks.Task<string> FilterOfProductAsync(string productName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : SmoothPOS_Beta_.ProductService.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<SmoothPOS_Beta_.ProductService.IProductService>, SmoothPOS_Beta_.ProductService.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddProduct(string stringJSON) {
            return base.Channel.AddProduct(stringJSON);
        }
        
        public System.Threading.Tasks.Task<int> AddProductAsync(string stringJSON) {
            return base.Channel.AddProductAsync(stringJSON);
        }
        
        public int UpdateProduct(string stringJSON) {
            return base.Channel.UpdateProduct(stringJSON);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProductAsync(string stringJSON) {
            return base.Channel.UpdateProductAsync(stringJSON);
        }
        
        public int RemoveProduct(int productID) {
            return base.Channel.RemoveProduct(productID);
        }
        
        public System.Threading.Tasks.Task<int> RemoveProductAsync(int productID) {
            return base.Channel.RemoveProductAsync(productID);
        }
        
        public string ListOfProduct() {
            return base.Channel.ListOfProduct();
        }
        
        public System.Threading.Tasks.Task<string> ListOfProductAsync() {
            return base.Channel.ListOfProductAsync();
        }
        
        public string FilterOfProduct(string productName) {
            return base.Channel.FilterOfProduct(productName);
        }
        
        public System.Threading.Tasks.Task<string> FilterOfProductAsync(string productName) {
            return base.Channel.FilterOfProductAsync(productName);
        }
    }
}
